#= Main Screen Turn On
---
#= Hack Yourself First
---
#= Introductions
##- Hi!
---
#= And what about you?
## (not your employer)
---
#= What's your flavour?
##- Joomla, presumably.
##- Anything else?

Note: Take note of any other stacks, and adlib appropriately.
---
#= What the CVE?
---
# CVE
##- Common<br>Vulnerabilities and Exploits
###- Uniquely identified
###- <p><code>CVE-YYYY-NNNN</code></p>
###- <p><code>+NNN</code></p>
Note: up to 10,000 p/a up until last year
Now 7 N's -> 10,000,000  

Only when required in a calendar year

Highest CVE number so far == 76xx-ish
---
#= OWASP
##- Open Web Application<br>Security Project
##- https://www.oswap.org

Note: they make the OWASP Top 10
---
## OWASP Top 10
<p align="left">
<span class="n"> Injection</span>
<span class="n"> Broken Authentication and Session Management</span>
<span class="n"> Cross-Site Scripting (XSS)</span>
<span class="n"> Insecure Direct Object References</span>
<span class="n"> Security Misconfiguration</span>
<span class="n"> Sensitive Data Exposure</span>
<span class="n"> Missing Function Level Access Control</span>
<span class="n"> Cross-Site Request Forgery (CSRF)</span>
<span class="n"> Using Components with Known Vulnerabilities</span>
<span class="n"> Unvalidated Redirects and Forwards</span>
</p>
---
## The Big Three
<p align="left">
<span class="X"> Injection</span>
<span class="n"> Broken Authentication and Session Management</span>
<span class="X"> Cross-Site Scripting (XSS)</span>
<span class="n"> Insecure Direct Object References</span>
<span class="n"> Security Misconfiguration</span>
<span class="n"> Sensitive Data Exposure</span>
<span class="n"> Missing Function Level Access Control</span>
<span class="X"> Cross-Site Request Forgery (CSRF)</span>
<span class="n"> Using Components with Known Vulnerabilities</span>
<span class="n"> Unvalidated Redirects and Forwards</span>
</p>
---
## Poor Authentication
<p align="left">
<span class="n"> Injection</span>
<span class="Y"> Broken Authentication and Session Management</span>
<span class="n"> Cross-Site Scripting (XSS)</span>
<span class="Y"> Insecure Direct Object References</span>
<span class="n"> Security Misconfiguration</span>
<span class="n"> Sensitive Data Exposure</span>
<span class="n"> Missing Function Level Access Control</span>
<span class="n"> Cross-Site Request Forgery (CSRF)</span>
<span class="n"> Using Components with Known Vulnerabilities</span>
<span class="Y"> Unvalidated Redirects and Forwards</span>
</p>
---
## Poor Authorisation
<p align="left">
<span class="n"> Injection</span>
<span class="n"> Broken Authentication and Session Management</span>
<span class="n"> Cross-Site Scripting (XSS)</span>
<span class="n"> Insecure Direct Object References</span>
<span class="Z"> Security Misconfiguration</span>
<span class="Z"> Sensitive Data Exposure</span>
<span class="Z"> Missing Function Level Access Control</span>
<span class="n"> Cross-Site Request Forgery (CSRF)</span>
<span class="n"> Using Components with Known Vulnerabilities</span>
<span class="n"> Unvalidated Redirects and Forwards</span>
</p>
---
## The cause of much sadness
<p align="left">
<span class="n"> Injection</span>
<span class="n"> Broken Authentication and Session Management</span>
<span class="n"> Cross-Site Scripting (XSS)</span>
<span class="n"> Insecure Direct Object References</span>
<span class="n"> Security Misconfiguration</span>
<span class="n"> Sensitive Data Exposure</span>
<span class="n"> Missing Function Level Access Control</span>
<span class="n"> Cross-Site Request Forgery (CSRF)</span>
<span class="C"> Using Components with Known Vulnerabilities</span>
<span class="n"> Unvalidated Redirects and Forwards</span>
</p>
---
#= CVEs -> Patches
## Free fixes!


Note: Applying things like Windows Updates is **super important**
---
#= How long has it been since you last patched?

Note: in the last month?

year?

... ever?
---
# In the last 9 months...
## Content Management System CVEs
#### &nbsp;
###- Wordpress - ~100*
###- Drupal - ~100*
###- Magento - 7
###- Joomla - 4

<span class="dasfoot">* includes plugins<br><a href="https://cve.mitre.org">https://cve.mitre.org</a></span>
Note: 
Drupal/Wordpress are ESTIMATES

Wordpress probably include splugins, also Wordpress 4 within the last year, so lots of movement

Drupal the same, but they also have had Drupal 8

---
#= But it's not just<br>your CMS
---
# In the last 9 months...
## Framework CVEs
#### &nbsp;
###- Django - 13
###- Ruby on Rails - 5
###- Symfony - 2
<span class="dasfoot"><a href="https://cve.mitre.org">https://cve.mitre.org</a></span>
---
#= But it's not just<br>your framework
---
# In the last 9 months...
## Language CVEs
#### &nbsp;
###- Perl - 6
###- Python - 8
###- Ruby - 2

<span class="dasfoot"><a href="https://cve.mitre.org">https://cve.mitre.org</a></span>
Note: Hard to get an exact number for PHP
At one time, research says it was as high as 25% of all vulns
http://www.coelho.net/php_cve.html
---

#= PHP
##- ...
---

@ PHPChart_NoLabels.png
---
@ PHPChart_Labels.png

---
#= But it's not just<br>your language
---
# In the last 12 months...
## Operating System CVEs
#### &nbsp;
###- CVE-2014-6271<br>CVE-2015-0204<br>CVE-2015-3456
---
# CVE-2014-6271
- <img src="pictures/ghost.png">
---
# CVE-2015-0204
- <img src="pictures/venom.png">
---
# CVE-2015-3456
- <img src="pictures/shellshock.png">
---
#= Logos bring recognition
---
#= &nbsp;
@ heartbleed.png
---
#= But it's not just<br>your application stack
---
# CVEs recorded against: 
## &nbsp;
## Nginx
## IIS
## Apache
<span class="dasfoot"><a href="https://cve.mitre.org">https://cve.mitre.org</a></span>
---
#= But it's not just<br>your entire website
---
# CVEs recorded against: 
## JIRA
## Request Tracker
## Confluence
## SugarCRM
## and many, *many* more...
<span class="dasfoot"><a href="https://cve.mitre.org">https://cve.mitre.org</a></span>
---
#= But wait! That's not all!
---
#= Responsible Disclosure
Note: All these are things we know about. 

Doesn't include bad actors
---
#= And *that's* assuming you're up to date!
---
#= Deprecated Language Versions
## Are you running unpatched languages?
---
#= PHP
##- What version are you running?
---
#= PHP < 5.0?
##- Go upgrade. Now.
<span class="dasfootc"><a href="http://php.net/eol">https://php.net/eol</a></span>
---
#= PHP 5.0?
##- Upgrade. Unmaintained. 
<span class="dasfootc"><a href="http://php.net/eol">https://php.net/eol</a></span>
---
#= PHP 5.1?
##- Upgrade. Unmaintained. 
<span class="dasfootc"><a href="http://php.net/eol">https://php.net/eol</a></span>
---
#= PHP 5.2?
##- Upgrade. Unmaintained. 
<span class="dasfootc"><a href="http://php.net/eol">https://php.net/eol</a></span>
---
#= PHP 5.3?
##- Upgrade. Unmaintained. 
<span class="dasfootc"><a href="http://php.net/eol">https://php.net/eol</a></span>
---
#= PHP 5.4?
##- Upgrade. Unmaintained. 
<span class="dasfootc"><a href="http://php.net/eol">https://php.net/eol</a></span>
---
#= PHP 5.5?
##- Keep your patches up to date.
<span class="dasfootc"><a href="http://php.net/eol">https://php.net/eol</a></span>
---
#= PHP 5.6?
##- Keep your patches up to date.
<span class="dasfootc"><a href="http://php.net/eol">https://php.net/eol</a></span>
---
#= PHP 7?
##- ...
<span class="dasfootc"><a href="http://php.net/eol">https://php.net/eol</a></span>
Note: PHP 7.0.0 RC3 2015-09-17. If in production...
---
#= So just how much *don't* we patch?
##- Surely it's not that bad, right?
---
## PHP <span style="color:black">72</span>%
## Python <span style="color:black">72</span>%
## Perl <span style="color:black">18</span>%
## Drupal <span style="color:black">55</span>%
## Wordpress <span style="color:black">40</span>%
---
## PHP 74%
## Python 22% 
## Perl 18%
## Drupal 55%
## Wordpress 40%

<span class="dasfoot">http://blog.ircmaxell.com/2014/12/php-install-statistics.html
</span>
---

#= But, but, but...
---
#= "It's too hard!"
##- "Upgrades are hard!"
##- "Patching is boring!"
---

#= No, it's not.
##- It's easier than losing your business.
---

#= "That won't<br>happen to me!"
---
#= KMart
Note: extracted limited information, exploited a vulnerability
---
#= David Jones
Note: extracted limited information, exploited a vulnerability
---
#= Patreon
Note: production data on dev website, open to the internet, with a public debugger
---
##= ... all within in the past 10 days. 
---
#= "I'm not big enough to be a target"
---
#= You don't have to be
Note: automatic attacks, not even targetted ones

Port scanning
Rainbow Tables

---
#= So what can you do?
---
#= Patch.
---
#= Update.
---
#= ... and ...
---
#= Know your enemy.
Note: You need to know what your customisations are doing to your system
---
<section data-background="#ffffff"><h1>
<br>
<br>
Let's do some hacking.
<h1></section>
---
<section data-background="#ffffff"><h1>
<br>
<br>
Repeat after me...
</h2></section>
---
<section data-background="#ffffff"><h2>
<br>
<br>
<br>
I (your name here)
<br>do solemnly and sincerely and truly declare and affirm ...
</h2></section>
---
<section data-background="#ffffff"><h2>
<br>
<br>
<br>
...  to use the following knowledge for good and not evil ...
</h2></section>
---
<section data-background="#ffffff"><h2>
<br>
<br>
<br>
...  for learning and not profit.  
And agree that if I break my oath I will ... 
</h2></section>
---
<section data-background="#ffffff"><h2>
<br>
<br>
<br>
... rebuild wordpress.com using nothing but Fortran, HTML tables and transparent GIFs.
</h2></section>

---
<section data-background="#ffffff"><h1>
<br>
<br>
Let's do some hacking!   
</h1></section>
---
<section data-background="#ffffff"><h1>
<br><br>
PLACEHOLDER<br>Wifi Information ETC</h1></section>
